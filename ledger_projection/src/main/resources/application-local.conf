include required("application.conf")

// for local / docker-compose
akka.management.http {
  // when in Docker network, this should be equal to the container name (DNS alias to docker assigned IP)
  hostname = ${ledger-settings.cluster-discovery.service-name}
  // when in Docker network, this should be equal to akka.management.http.bind-port
  port = ${akka.management.http.bind-port}
}
akka.remote.artery.canonical {
  // when in Docker network, this should be equal to the container name (DNS alias to docker assigned IP)
  hostname = ${ledger-settings.cluster-discovery.service-name}
  // when in Docker network, this should be equal to akka.remote.artery.bind.port
  port = ${akka.remote.artery.bind.port}
}
akka.discovery.config.services {
  openledger-projection = {
    endpoints = [
      {
        // when in Docker network, this should be equal to the
        // leader's container name (DNS alias to docker assigned IP)
        host = ${ledger-settings.cluster-discovery.service-name}
        // when in Docker network, this should be equal to akka.management.http.bind-port
        // assuming cluster is configured identically
        port = ${akka.management.http.bind-port}
      }
    ]
  }
}

ledger-settings {

  cluster-discovery {
    required-contact-point-nr = 1
    service-name = "openledger-projection"
    discovery-method = config
  }

  database {
    host = "postgres"
    port = 5432
    name = "openledger_db"
    schema = "public"
    username = "openledger_user"
    password = "openledger_password"
    number-of-connections = 20
  }
}